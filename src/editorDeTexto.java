
//Clases que necesitamos importar
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author CrisRodFe
 */
public class editorDeTexto extends javax.swing.JFrame {

    /**
     * Creates new form editorDeTexto
     */
    public editorDeTexto() {
        initComponents();
    }
    
        
    JFileChooser filechooser = new JFileChooser();
    int opcion;    
    /**
     * Métodos para las diferentes alternativas del menú "Fichero"
     */
    //Opción Nuevo fichero: resetea el área de texto
    public void nuevoArchivo(){
        areadeTexto.setText(null);
    }   
    //Opcion abrir fichero:si se pulsa aceptar se abre el archivo elegido en el área de texto
    public void abrirArchivo() throws FileNotFoundException, IOException{        
        opcion = filechooser.showOpenDialog(areadeTexto);
        if (opcion == JFileChooser.APPROVE_OPTION){
            File fichero = filechooser.getSelectedFile();
            BufferedReader reader = new BufferedReader(new FileReader(fichero));
            areadeTexto.read(reader, this);
            reader.close();                           
        }        
    }    
    //Opcion guardar: guarda en el archivo actual
    public void guardarArchivo() throws IOException{           
          try { 
              File fichero = filechooser.getSelectedFile();
           if(fichero.exists()){    
           BufferedWriter writer = new BufferedWriter(new FileWriter(fichero));
           areadeTexto.write(writer);
           writer.close();     
           }
          }catch (IOException ex){
                   guardarComo();
                   }
}
    
           
       
    //Opcion guardar como: guarda en el archivo elegido en la ventana de diálogo
    public void guardarComo() throws IOException{
        opcion = filechooser.showSaveDialog(areadeTexto);
        if (opcion == JFileChooser.APPROVE_OPTION){
            File fichero = filechooser.getSelectedFile();
            BufferedWriter writer = new BufferedWriter(new FileWriter(fichero));
            areadeTexto.write(writer);
        }
    }
                               
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        cortarPop = new javax.swing.JMenuItem();
        copiarPop = new javax.swing.JMenuItem();
        pegarPop = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        areadeTexto = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        nuevo = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        gcomo = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        cortar = new javax.swing.JMenuItem();
        copiar = new javax.swing.JMenuItem();
        pegar = new javax.swing.JMenuItem();

        jPopupMenu1.setBackground(new java.awt.Color(204, 204, 255));
        jPopupMenu1.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        cortarPop.setBackground(new java.awt.Color(204, 204, 255));
        cortarPop.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        cortarPop.setText("Cortar");
        cortarPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarPopActionPerformed(evt);
            }
        });
        jPopupMenu1.add(cortarPop);

        copiarPop.setBackground(new java.awt.Color(204, 204, 255));
        copiarPop.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        copiarPop.setText("Copiar");
        copiarPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarPopActionPerformed(evt);
            }
        });
        jPopupMenu1.add(copiarPop);

        pegarPop.setBackground(new java.awt.Color(204, 204, 255));
        pegarPop.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        pegarPop.setText("Pegar");
        pegarPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarPopActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pegarPop);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor de Texto");

        jScrollPane1.setBorder(null);

        areadeTexto.setBorder(null);
        areadeTexto.setFont(new java.awt.Font("Helvetica", 0, 13)); // NOI18N
        areadeTexto.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(areadeTexto);

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 255));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setBackground(new java.awt.Color(153, 153, 255));
        jMenu1.setText("Fichero");
        jMenu1.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        nuevo.setBackground(new java.awt.Color(204, 204, 255));
        nuevo.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        jMenu1.add(nuevo);

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        abrir.setBackground(new java.awt.Color(204, 204, 255));
        abrir.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jMenu1.add(abrir);

        guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        guardar.setBackground(new java.awt.Color(204, 204, 255));
        guardar.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jMenu1.add(guardar);

        gcomo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        gcomo.setBackground(new java.awt.Color(204, 204, 255));
        gcomo.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        gcomo.setText("Guardar como");
        gcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gcomoActionPerformed(evt);
            }
        });
        jMenu1.add(gcomo);

        salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        salir.setBackground(new java.awt.Color(204, 204, 255));
        salir.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jMenu1.add(salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(153, 153, 255));
        jMenu2.setText("Editar");
        jMenu2.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N

        cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cortar.setBackground(new java.awt.Color(204, 204, 255));
        cortar.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        cortar.setText("Cortar");
        cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarActionPerformed(evt);
            }
        });
        jMenu2.add(cortar);

        copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copiar.setBackground(new java.awt.Color(204, 204, 255));
        copiar.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        copiar.setText("Copiar");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        jMenu2.add(copiar);

        pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pegar.setBackground(new java.awt.Color(204, 204, 255));
        pegar.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        pegar.setText("Pegar");
        pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegarActionPerformed(evt);
            }
        });
        jMenu2.add(pegar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Cada uno de los eventos llamará a su correspondiente método
     * descritos más arriba para cada una de las opciones del menú,
     * excepto al de la opción salir,que sí implementa la acción a realizar.
     * @param evt 
     */   
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        try {
            abrirArchivo();
        } catch (IOException ex) {
            Logger.getLogger(editorDeTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        nuevoArchivo();
    }//GEN-LAST:event_nuevoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        try {
            guardarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(editorDeTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void gcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gcomoActionPerformed
        try {
            guardarComo();
        } catch (IOException ex) {
            Logger.getLogger(editorDeTexto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gcomoActionPerformed

    /**
     * Eventos para las acciones de cortar,copiar y pegar.
     * Tanto de la barra de menú como del menú emergente.
     * @param evt 
     */
    private void cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarActionPerformed
        areadeTexto.cut();
    }//GEN-LAST:event_cortarActionPerformed

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        areadeTexto.copy();
    }//GEN-LAST:event_copiarActionPerformed

    private void pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarActionPerformed
        areadeTexto.paste();
    }//GEN-LAST:event_pegarActionPerformed

    private void cortarPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarPopActionPerformed
        areadeTexto.cut();
    }//GEN-LAST:event_cortarPopActionPerformed

    private void copiarPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarPopActionPerformed
        areadeTexto.copy();
    }//GEN-LAST:event_copiarPopActionPerformed

    private void pegarPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegarPopActionPerformed
        areadeTexto.paste();
    }//GEN-LAST:event_pegarPopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editorDeTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editorDeTexto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JTextPane areadeTexto;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem copiarPop;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JMenuItem cortarPop;
    private javax.swing.JMenuItem gcomo;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem nuevo;
    private javax.swing.JMenuItem pegar;
    private javax.swing.JMenuItem pegarPop;
    private javax.swing.JMenuItem salir;
    // End of variables declaration//GEN-END:variables
}
